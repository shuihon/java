public class Hwbitoperator {
	public static void main (String [] args ) {
		/*1.先求出2和3的补码
		 * 2.由于正数三码合一，补码就等于原码
		 * 3.2的补码是0000，0000；0000，0000；0000，0000；0000，0010
		 * 4.3的补码是0000，0000；0000，0000；0000，0000；0000，0011
		 * 5.按位与操作：0000，0000；0000，0000；0000，0000；0000，0010
		 * 6.操作后得出的是补码，计算机运算时用的是补码，但显示时用但是原码
		 * 7，三码合一正数。所以等于
		 * 2
		 */
		System.out.println(2&3);
		/*-2原码：1000，0000；0000，0000；0000，0000；0000，0010
		 * -2补码：反码+1等于补码（负数情况）
		 * -2反码：1111，1111；1111，1111；1111，1111；1111，1101
		 * -2补码：1111，1111；1111，1111；1111，1111；1111，1110
		 * 取反操作：0000，0000；0000，0000；0000，0000；0000，0001
		 * 这是操作后的补码，正数，三码合一，也是原码，结果为
		 * 1
		 */
		System.out.println(~-2);
		/*2的原码0000，0000；0000，0000；0000，0000；0000，0010
		 * 取反操作1111，1111；1111，1111；1111，1111；1111，1101
		 * 操作后的负数补码，补码-1=反码
		 * 负数反码：1111，1111；1111，1111；1111，1111；1111，1100
		 * 该负数反码
		 * 的原码：  0000，0000；0000，0000；0000，0000；0000，0011
		 * -3
		 */
		System.out.println(~2);
	}
}